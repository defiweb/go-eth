package hexutil

import (
	"encoding/hex"
	"reflect"
	"testing"
)

const TestHexToBytes0 = "0xd7fd19dd00000000000000000000000010e6593cdda8c58a1d0f14c5164b376352a55f2f000000000000000000000000467194771dae2967aef3ecbedd3bf9a310c76c6500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000001cfd400000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000104a9f9e6750000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000da10009cbd5d07dd0cecc66161fc93d7c9000da1000000000000000000000000d7a6756edec2383814cad34eae70b2e09b8ba29e0000000000000000000000006c0c358e2feb68af4099da35f020d1f02a1071eb0000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ee26cc41e4c2258070f95621b9bb83d8e8c658ea10414a016e7f1f854528237500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000003400000000000000000000000000000000000000000000000000000000000000f0000000000000000000000000000000000000000000000000000000000000114b94a5ddbeeba84d63e36ac27b4bb43e9f5aa42f345d4844387f7deb81448d8d81b00000000000000000000000000000000000000000000000000000000000003cb0000000000000000000000000000000000000000000000000000000003eca40b00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000063c16247000000000000000000000000473300df21d047806a082244b417f96b32f13a3300000000000000000000000000000000000000000000000000000000000000a50000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000ad13aa41ebbfa2955a08c94108dda89a32183bb7835f92bc967ac778db61de80a0e1b6d04995ba4b5082f6adfa700d09eccbecfc4c62752cc52f729ee2e8212d6ed59a1ec2dacf2e52731075504258994b71c907396e44a69b37688cba1f292bf8558d81d59496322aa205706b0954ffdb086b0a0b02d1cf9c61e571bf3c34473e1faaa1900e16d58aadde64b261ab791791cde66600f7f0924483ffde953a92774f27e123caf8cc8edfac115c0319718d6d4896c863fa399ce52bd22085468982ba0ac15454be94c7f49e03a57f9af346e96c8395688532ead507e4b871661df620073ae8e4beae3f2d81d6b79f16b2d6ac22b5fd132b91e136017041f6f12b908fcf4c480d055579419202185f6faae325af53b68e02d1f88b6043c51ff09410be68dd9601c82dd11c0f8d36412277461cdc78614fa849124666e40ec092acb0000000000000000000000000000000000000000000000000000000000000b8af90b87b90214f90211a03d105e142062580b7e71bb0480a0e44dc4f3c914a81d55389e33b41aa7c32dfca0432d44ff664c04ae9c762257aeb416dca1f295bd7591bca0b5bb8e18f83d8ae1a07ecdf4abd9c95a798d43a8641d566518fed02fbf66bfe2fffaa766060f6a4344a0f99794b0c005f1eb8ca78e10f68af10cbeb4ce874ae971d5d62cf6791fee87afa0d55b1813f64ba0c4b9e4d4bc985bb6895bb255a2c57e7cf9aa52c3aaa40cd645a0e4749bac24e0f55af48218e153178df58b34c61d2c50fff3b86ffe44bd023deaa093261ae13e5b5fd347feb2f885301f4e7fe866d8010472110f626d6b406dcc34a0deefc4b7b08dd9bd3a3aef669fa1e9cd28c5c3ad2bc2829f1a5dc6327d16749aa05393ffb1e61f33480f936b538efde09bc37060194d7127003867ce7bdac7ada1a0d751b7c8b98a70f4a3910f08aecbce9cf19bbbe0aa1d9e21b6ae5983be572fcca0eb9cef611c5666575edaf279be74dcc8a927c95b09fc1c7d21bbdb28190e8daca0255223d7041a2c2a0b51b03cfa0f390d5f29ad755c847ba55bc2dfd68bde6f79a0eb9e084bd09eb2093bdd43ffa21f47acb93e25652a16348900b324350cf91da2a01cc807c9ca65c1f2e5565defb028155d668337ca836bf200daa4077b6f0781a7a0f6676912e8497b540bed6ab0a7466705d4b90ab22acabcfbc9acb3fd96846ea7a0d750b2dac57f266b7ec37baa9758005fcfa26b2b701f920feef239a3c6ea740a80b90214f90211a00c0323b504c95f5a46677ebd9246aee68821387a92a874d380fd4b95b9d24d3ea024e3aee883dd28b73b1bc8b8dba081c581e79fd796cd0f82280001fb48ab7a7ba0733d8d73435aa9abd2531f60ea743deb4af624bd2aa8b17747d1509344bd60a4a0459a15b7bd49e0c713c3475efb988704d9c0f6eef73c9231838247c0e20d3fbfa0d912d947cdfc2b4199aa3221e0aab9f892ff057d2ecdef618e4b8a98d162b682a0a1ba728c818e00ab92b9ec6aa98fc21eeed614ae498e026ffb51078a301bea6aa0cbc86a7e002bfeba5ba0b3919a0e78892c4f70dc7677690f9df55008a8e41047a08959a51c3056ff5869b082dda1e3ad0c5af7efd0436172400058f519947f2961a02e1ddc09bb4a9d28d33c7e9c95b9398f0f3a6453829dc6744ca2c626d821dbf6a09bc5c0506676b3de29e58216169d56f36347b37da4729f5b2552b0f02bb1856ca039d14aaa4fbc1504014e3f00be145e6df034dd98c0673eb3bedd2823798432c1a093a25c1cb2d64abe4b49e954e9560373a3ce728e014e765f32143b11c65235b4a008c9bc1fd405bf2f26d411238a5178431004ace53a15871e09a009d5a446ec4aa02ca8fc7615afe5484518ef48f4cdca0ebafa66bca9a2750215544c192bbe0e74a0f7d87ce599a5bec73176b8168037b3acccd9a16018634ab3d009506d06322398a09ea1c72dc919bb2403e7c08b868afba0c7d8eed37a394aa02c89fbf271f3cfe580b90214f90211a05953e6c9772fd8f8ee6ae57a4ee2452b84c7a3ef558f5e56800f998540b7bd7ba004b906f3e2e3996a7685ff91d81ad145216ed58816845c5eee496f92f9a9c46ea04e0e13a7570e6507e8a442d622d7077e9f583d6c28070baea5abdff0fe28eb8da0da6fd386e863aa2ec00c18118887324b70d89667e7d69f55f3c5660dac96ea33a000b7d62c9109734b0638565b63ae84716f619920b513e46830e94c12b6820d93a026ea1019daa0cff80d859a38ce13d5bc9146e86a61b03b01da0cdad734836b42a08edeba8919c585f07e9c826a88ccdb19a779608a0edd175921b9dbfc74a26defa01e5d0c64e27975f86e74354a3807ee3aa79a496a231c9bbdc4c281cc76666f80a0f3d6e93f5f907971c2888a9700887abdbb92280e59f49174deddc11a19edf6f7a02e7aec5f14bd7d38771bc8cfee2ba887e9267e688fb5dbee8c6f7d165b1d44aaa0894f6c96d0bad9469d2c0ec7abb934478609d5eb40655ad6401de28c72ad6b2fa0d0674c74ade7c95358541c4ac4b29e30be266b4743c63f383d3b6df13c329086a015ab748f98433fa6ca86a8bc5ffa9171b0535e758ffe04c86f1cac750876c8b4a07347f4cdaff827d1bac4d9f3877fcc4c99e4d23e94ed88366595feca9f8faeaba086265701c2ab80a639e2c539cda07c45a4e6c7d5ab7368d1923423e51e9e2e76a006f0532520deca543ca41d78beb23f5916e0aec96fb39c8d4638890c91180bcb80b90214f90211a052809ee4e6680fe01d3eeffe6e43063d82490d37d85ab5d3459cf3f349baf867a0e7c12509f679cdea53a0effe56a8f06c080e907f3cb95f41895ad8c452caf593a03cdcdc1b3684d3365261deca86a3acd4ac1d27418292feae90f765641c84524ca01955151b8d2902e8d8c3ab9edb776e40909b53abaf9877ccdf19ddcec4607820a0e12c72077a53ffc73f64259f0691d81d9d774d214f1259d9ba329ba9c89114dba09f1c0a1d4c101ff2528fbf39164a4fc49dde21cc3b906035a6a8f72c51a668e1a064b8bb483de0fdb6203b20dfb43390b060c326e887fefc02d3a8330616637c99a038daecb8ba7126d618328d271ab4401561ad22d44cd1054cfeeccbe320beb47ba036a22f28d47da27ca37d4e9a99a5bd2eee312dbedb51d51404aa375a58561402a0d417a9d64e9b4f59a99d7f87645ebc45d29b7b2e8dc2e141b191ef119cc0b3e9a0e4f7cf9bad5c00ea037406f8fea6371ac70f9db7b64673a3ea681c3c9588d6c9a0bed6e7590cd81f6775203194a404cfbad4ae9ea262860722ef41bbf1d4ba6dc2a080e8584fc75c089a1ea4fc202fc659d9f7738f5bac70dcc6db4885389feef886a01e7371293d092e16193489ba535de4b57f4c18023a8113a0265f413902156f2da061f78942f51e63118feb105053149b8f4bf507b60d643726c4ff51fc0a1aed21a0a33460ecbd54a07bde80c8b3a0e1c2989b1670d9c596a27415daf269bec714a580b901d4f901d180a063dc4010492fa2a03778a3907826318dcd73d518f2109043baaa7615a11a7aaea02ecb64e51e1955fa65d9bf2dd49e7584f92ba879d9742ba169c6e542007ae23aa046f1f50d8214c6d55ffdbd6528531265370236a43da7164df4c4284cfcac550ca08df171594095df95e8b50c6ea7521d07c9a6d68221fbcbfd412c36a349a258a0a0bfd442a9bcd9f4970b62adc91f89d0c31300c68b50bde9e2e03ff5b361fb6e2a80a0584c48f053c3b7d3b2d0abb99551e57c059b596d7cdfc73f98dad9eeaeb8cc18a0735219230502d541b27438a653cf261f0119c39c4e2d0b676a201b5e7e82544ca0961e6bd8a7603562443b1a9ff229c04ffa219adb237e052faa0ae4c0b3e0d3faa014da9efce77a8b157aee23813ffb7d7e5c0b44775cd27770bacf77518c772b05a0fe3f2416baaa999934dc10c8c60cba7d93d2edccebd4e440bc19c548280aa473a01fa04fe6007013570445228a51240352538b2de545b31e3afb27a7c4eccec42aa04542c3e17ab8e4fe55c72ac67eecfcc04458e4ed4c117b72dd781a578dab597da076c0da248dd0dfa28b25efb44c65339f02f77dcc3c9119f159930419d5ee4f48a02ebd1e7f6866019d07cd8803228d3fee12091d1e16aeeab434fcb5ca0eb06b1c80b893f891a0e2ae5a02ceb21a3ad07f80f3bb1e04462c166f0335e03622e8b6fc76ab44dc54a04a47128a50564b7d1c7d2b1156d41eda043a694c463550e21359c49efab3d0d48080a0b30f4552a12e236334072f564c5551fa591be4766ead43a9f43f2f2e81aee8be8080808080a013ea7ed65b31d32b8253e4b14e686232d5763385b61d41827ea3fc9407469f88808080808080b853f85180a09d0db06dac4872b89d2d0eb9d4a5fb0165a24d50fb9dd0634e4c443d5148268a80808080808080808080808080a0b812ceb97de339d4b9c3b6328706b1d341e6fadbcc2a24512be0640ad4c6a37a80b868f8669d3b46a2440f3eaf346b6c1ce588ed08712591822a258c5a1c4cf44cd0c9b846f8448080a0ea5d55cfbe9cbee7115181a815a1ecd88bc6811f41b57a6d8722482aafda6d20a011a24190f7e396e61e0fdf84fa138cdbb67aeba7b4dcbb1f444447cb53f5ae5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000774f90771b90214f90211a02bbb81b9be08dcd15f44ed1e06c3277f8433d4cace5c316ed1693f4214e858daa09684d8799014a2dd6052a0b47b44849b04fd75181030cea05a12b9d927f8fb22a017bdba39bd2d8efa65c008e3da01f72d95e9ce3b64fc57ab710e53cd0daf1ce6a0c40b93c1dfb1b6b7dc3f801de5812ab5788cd130168c0bc5b7997b1d45d834f3a0fe89b00c6c6e209bcf91ee26f675368d22d7061f60da29124d91c0475c51b583a0415f83846e964d9822481de39ca2bbdfa13f62bc7472d0e6c172fe6847e5be7ea03f3b58ebaebf433419b99d17e13fa0145ea8c993ff226ed753e325f49bae236ca06ccbff2898ae02e472be29bcb0290b0513c3ef313a008225cac6c3353d9394eaa0c2cc9fe8114de1d062fa4d37e486b61cf7669fc8e2cbc0259c47eebda7513210a0cf34f64bb65843da748cbae65550deaf384a2320fe35ba4ba2d8cd7e9a6ee601a0c1d908a2fa83c3a3981092907121823ddba139e50325c29be77efe6cfab0e394a069bcf4fcaf92538deba4b0e98bf7b7c035f8e5318c37d2b2a66545e9d0b137f2a0410e3c4b1c22612afbcc606772fa37a1fe0f04213add708d507b8924b1244792a000c62e8f2577ca4af0f2ebf5960d903e24bebf9bffa99a13b9673e61bebe3ba9a0a7ab44936eaaddbf1607b490b091ae04718194b5c46c421ef91d2f7ab35efdd8a08ffa6d8ae20d3584187cd69895fd305dd26ccbac656a21e541e4318de754e0ab80b90214f90211a050a7bf2859d17c5d6ad46499a159c30fe0d8cbd6904bedf51de5f2bfa9ad6a03a0c8342b195c82676182d250c00a1cabe24b501ebb7ba758e679b6cdbcca729787a0c49af8916b2b54149eb2b2386b68aaf80d0e586ffe873320d1dc84540b8568c8a0996bcaf00613c146a79f4bc1f1ee7e396bcb0b7d94b948f0c2cdcb3cb0a90916a062b10767d0bf126973076fba6faca1d31b939cf0773976deff13ffd83cdd2deba0587d551a90d86d891ba1a1bb6966f36990d1bc06ba21f99d083eb377fae23926a0daed9ece80b329a93ddd0eaf82d7cd09e0695f88414becf5fdca505ee840edaca08eaeb23a61012eff85b7ec9466a1a5165d05272b61f60535a14d13d965b2cf4ca0b88db4c340b43362e38f2dda30fcdff8877ac5127fe4e8659f950e83a06ff7c4a0550257f7d1c9d94bf43c1879b35e6d97354733bde2c74d3e2860063a46b17b02a0aaa6988060a34a311a3417b5e63480b4686fa146b5b6253794930fe0ccee006da080b09288d80396439cc4d4b492f4b77aaf3b7384eff3a59a1455b171b467d61ca0591507fb2d1d2c3cf236acac649cfb08253c81910ee844e1fa5000f765699407a003a2e22aa13fff7e5efdc766540c6f0b055be3eb1e11913a2ab1491567385e4ba01acac747b3e10e6f39c9ada8a281e079909c175f8ad15ebce579743e06fadd27a0dc08f9e6695bf40e6f55f9dc821b5666f08696c499138a39eadf2e7c070d9a9580b90214f90211a0307a221678f2ab7c64de6863164e8e5343cc26252c7946cb46f6c6bbb868f9a5a0076093044a9f895d1a75f31d8cdc95931bae503095d226dae78ec96feed3ae30a01c500915893e20d8600155bb112de270ee76e28f6fe17cb76fe600105bdb2696a007052fb128c28d8fc051230417868a3b7eedeac49f2398dcc8bd3d28a757e999a076e19f1735b3e89643cfe37bdd1090a8e2b2274edab38cc17bf4ad92ad92aceda09ba153daeecaaf29363866b1e6f1b99de4b63d495c64d5c5e9be60d2875d9398a0da4cac1f4da945cb3124b5918262ce1bbd33c4f53cb93b931ea1d9ed736460a4a07af08d0eedb2e28f6134ff04246042d10972200f2c7dc7cf0db586bc3ad322baa0d37ddef613bb4116625608c695213e94431f54919184a88252c37b26e935eef9a06e6e600c52d3b3e8206969008b1ff8d01d488556ef68cbd854bd2e679b006dcea04e3538fa53bb40b828da06d57035d7d0a0569e139d8854c69e1a4f75c350fd51a0c8f7056f3955f802ce2890ea3aa039c6d7f05c12ef0209977a49af6300bfba29a0ef0a1b4ed48cedfeeb8b8ef14faa5c0cb9d1ee72765c8815d585b713f9744dfaa09b238488e37bfca265531ec170925552ed1403712801fd735347c0099615a200a07bd47f23f0196dfb060de8ea5a391d01522db8e3ec31e45f0b9ec89517d64a67a0ee8be37fbd715fdcee528182f44421a8c8b274d2be736ce9d201119a7cd0971580b893f89180a0ab8d135820ab6bc5e6bc2186825a58d8158813c4df8a9f3ff0189e87bbb8f2f480808080808080a0c6fb861d58262156d4e568eae5a561ddf8d4274ab98ec7c6487466e7b0cea29380808080a02a3571e5a706712977360604ddca9093f1fe738cfe58dc4a856c8363dcc1739fa042b2e94046600d55ee24252ce85ccb2be77f66d5bd3c40533820f07333a17aef80b873f871a038cb26ab5759143af4774c19ff33b2f885c146424bcb68310b3e1b0df882bad0808080a0d207866520872fad57d52f7c468adbfde2ef27dfc8ff660dfe5d313ad966561980808080808080a06797d9b59bf3fd323e0f97c5a63ed28dde50d57bf0858466ff293330c51a226680808080a1e09e325b8c67ac7cf3ac8ff9b2f66efa5b1f9542e6d6c47a39b48bad1d236f3d01000000000000000000000000"

func TestHexToBytes(t *testing.T) {
	tests := []struct {
		name    string
		arg     string
		want    []byte
		wantErr bool
	}{{
		name:    "decoding long hex",
		arg:     TestHexToBytes0,
		want:    mustDecodeHex(TestHexToBytes0),
		wantErr: false,
	}}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := HexToBytes(tt.arg)
			if (err != nil) != tt.wantErr {
				t.Errorf("HexToBytes() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("HexToBytes()\n got = %v\nwant = %v", got, tt.want)
			}
		})
	}
}

func mustDecodeHex(s string) []byte {
	if has0xPrefix(s) {
		s = s[2:]
	}
	d, err := hex.DecodeString(s)
	if err != nil {
		panic(err)
	}
	return d
}
